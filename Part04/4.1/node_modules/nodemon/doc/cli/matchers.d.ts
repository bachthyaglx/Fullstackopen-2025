(but not the s or x options):
         * - "pattern"
         * - /pattern/
         * - /pattern/options
         *
         * Alternatively, you can also specify the regex options with the options field. To specify the s or x options, you must use the options field.
         *
         * You cannot specify options in both the regex and the options field.
         */
        regex: RegExp | string;
        /**
         * The following <options> are available for use with regular expression.
         *
         * Note: You cannot specify options in both the regex and the options field.
         *
         * Option   Description
         *
         * `i`      Case insensitivity to match both upper and lower cases. You can specify the option in the options field or as part of the regex field.
         *
         * `m`      For patterns that include anchors (i.e. ^ for the start, $ for the end), match at the beginning or end of each line for strings with multiline values. Without this option, these anchors match at beginning or end of the string.
         *          If the pattern contains no anchors or if the string value has no newline characters (e.g. \n), the m option has no effect.
         *
         * `x`      "Extended" capability to ignore all white space characters in the pattern unless escaped or included in a character class.
         *          Additionally, it ignores characters in-between and including an un-escaped hash/pound (#) character and the next new line, so that you may include comments in complicated patterns. This only applies to data characters; white space characters may never appear within special character sequences in a pattern.
         *          The x option does not affect the handling of the VT character (i.e. code 11).
         *          You can specify the option only in the options field.
         *
         * `s`      Allows the dot character (i.e. .) to match all characters including newline characters.
         *          You can specify the option only in the options field.
         */
        options?: RegexOptions;
      };
    }

    export interface RegexFindAll {
      /**
       * Applies a regular expression (regex) to a string and returns information on the all matched substrings.
       *
       * @version 4.2
       * @see https://www.mongodb.com/docs/manual/reference/operator/aggregation/regexFindAll/#mongodb-expression-exp.-regexFindAll
       */
      $regexFindAll: {
        /**
         * The string on which you wish to apply the regex pattern. Can be a string or any valid expression that resolves to a string.
         */
        input: Expression; // TODO: Resolving to string, which ones?
        /**
         * The regex pattern to apply. Can be any valid expression that resolves to either a string or regex pattern /<pattern>/. When using the regex /<pattern>/, you can also specify the regex options i and m (but not the s or x options):
         * - "pattern"
         * - /pattern/
         * - /pattern/options
         *
         * Alternatively, you can also specify the regex options with the options field. To specify the s or x options, you must use the options field.
         *
         * You cannot specify options in both the regex and the options field.
         */
        regex: RegExp | string;
        /**
         * The following <options> are available for use with regular expression.
         *
         * Note: You cannot specify options in both the regex and the options field.
         *
         * Option   Description
         *
         * `i`      Case insensitivity to match both upper and lower cases. You can specify the option in the options field or as part of the regex field.
         *
         * `m`      For patterns that include anchors (i.e. ^ for the start, $ for the end), match at the beginning or end of each line for strings with multiline values. Without this option, these anchors match at beginning or end of the string.
         *          If the pattern contains no anchors or if the string value has no newline characters (e.g. \n), the m option has no effect.
         *
         * `x`      "Extended" capability to ignore all white space characters in the pattern unless escaped or included in a character class.
         *          Additionally, it ignores characters in-between and including an un-escaped hash/pound (#) character and the next new line, so that you may include comments in complicated patterns. This only applies to data characters; white space characters may never appear within special character sequences in a pattern.
         *          The x option does not affect the handling of the VT character (i.e. code 11).
         *          You can specify the option only in the options field.
         *
         * `s`      Allows the dot character (i.e. .) to match all characters including newline characters.
         *          You can specify the option only in the options field.
         */
        options?: RegexOptions;
      };
    }

    export interface RegexMatch {
      /**
       * Applies a regular expression (regex) to a string and returns a boolean that indicates if a match is found or not.
       *
       * @version 4.2
       * @see https://www.mongodb.com/docs/manual/reference/operator/aggregation/regexMatch/#mongodb-expression-exp.-regexMatch
       */
      $regexMatch: {
        /**
         * The string on which you wish to apply the regex pattern. Can be a string or any valid expression that resolves to a string.
         */
        input: Expression; // TODO: Resolving to string, which ones?
        /**
         * The regex pattern to apply. Can be any valid expression that resolves to either a string or regex pattern /<pattern>/. When using the regex /<pattern>/, you can also specify the regex options i and m (but not the s or x options):
         * - "pattern"
         * - /pattern/
         * - /pattern/options
         *
         * Alternatively, you can also specify the regex options with the options field. To specify the s or x options, you must use the options field.
         *
         * You cannot specify options in both the regex and the options field.
         */
        regex: RegExp | string;
        /**
         * The following <options> are available for use with regular expression.
         *
         * Note: You cannot specify options in both the regex and the options field.
         *
         * Option   Description
         *
         * `i`      Case insensitivity to match both upper and lower cases. You can specify the option in the options field or as part of the regex field.
         *
         * `m`      For patterns that include anchors (i.e. ^ for the start, $ for the end), match at the beginning or end of each line for strings with multiline values. Without this option, these anchors match at beginning or end of the string.
         *          If the pattern contains no anchors or if the string value has no newline characters (e.g. \n), the m option has no effect.
         *
         * `x`      "Extended" capability to ignore all white space characters in the pattern unless escaped or included in a character class.
         *          Additionally, it ignores characters in-between and including an un-escaped hash/pound (#) character and the next new line, so that you may include comments in complicated patterns. This only applies to data characters; white space characters may never appear within special character sequences in a pattern.
         *          The x option does not affect the handling of the VT character (i.e. code 11).
         *          You can specify the option only in the options field.
         *
         * `s`      Allows the dot character (i.e. .) to match all characters including newline characters.
         *          You can specify the option only in the options field.
         */
        options?: RegexOptions;
      };
    }

    export interface ReplaceOne {
      /**
       * Replaces the first instance of a matched string in a given input.
       *
       * @version 4.4
       * @see https://www.mongodb.com/docs/manual/reference/operator/aggregation/replaceOne/#mongodb-expression-exp.-replaceOne
       */
      $replaceOne: {
        /**
         * The string on which you wish to apply the find. Can be any valid expression that resolves to a string or a null. If input refers to a field that is missing, $replaceOne returns null.
         */
        input: StringExpression;
        /**
         * The string to search for within the given input. Can be any valid expression that resolves to a string or a null. If find refers to a field that is missing, $replaceOne returns null.
         */
        find: StringExpression;
        /**
         * The string to use to replace the first matched instance of find in input. Can be any valid expression that resolves to a string or a null.
         */
        replacement: StringExpression;
      };
    }

    export interface ReplaceAll {
      /**
       * Replaces all instances of a matched string in a given input.
       *
       * @version 4.4
       * @see https://www.mongodb.com/docs/manual/reference/operator/aggregation/replaceAll/#mongodb-expression-exp.-replaceAll
       */
      $replaceAll: {
        /**
         * The string on which you wish to apply the find. Can be any valid expression that resolves to a string or a null. If input refers to a field that is missing, $replaceAll returns null.
         */
        input: StringExpression;
        /**
         * The string to search for within the given input. Can be any valid expression that resolves to a string or a null. If find refers to a field that is missing, $replaceAll returns null.
         */
        find: StringExpression;
        /**
         * The string to use to replace all matched instances of find in input. Can be any valid expression that resolves to a string or a null.
         */
        replacement: StringExpression;
      };
    }

    export interface Rtrim {
      /**
       * Removes whitespace or the specified characters from the end of a string.
       *
       * @version 4.0
       * @see https://www.mongodb.com/docs/manual/reference/operator/aggregation/rtrim/#mongodb-expression-exp.-rtrim
       */
      $rtrim: {
        /**
         * The string to trim. The argument can be any valid expression that resolves to a string. For more information on expressions, see Expressions.
         */
        input: StringExpression;
        /**
         * The character(s) to trim from the beginning of the input.
         *
         * The argument can be any valid expression that resolves to a string. The $rtrim operator breaks down the string into individual UTF code point to trim from input.
         *
         * If unspecified, $rtrim removes whitespace characters, including the null character. For the list of whitespace characters, see Whitespace Characters.
         */
        chars?: StringExpression;
      };
    }

    export interface Split {
      /**
       * Splits a string into substrings based on a delimiter. Returns an array of substrings. If the delimiter is not found within the string, returns an array containing the original string.
       *
       * @version 3.4
       * @see https://www.mongodb.com/docs/manual/reference/operator/aggregation/split/#mongodb-expression-exp.-split
       */
      $split: [StringExpression, StringExpression];
    }

    export interface StrLenBytes {
      /**
       * Returns the number of UTF-8 encoded bytes in a string.
       *
       * @version 3.4
       * @see https://www.mongodb.com/docs/manual/reference/operator/aggregation/strLenBytes/#mongodb-expression-exp.-strLenBytes
       */
      $strLenBytes: StringExpression;
    }

    export interface StrLenCP {
      /**
       * Returns the number of UTF-8 code points in a string.
       *
       * @version 3.4
       * @see https://www.mongodb.com/docs/manual/reference/operator/aggregation/strLenCP/#mongodb-expression-exp.-strLenCP
       */
      $strLenCP: StringExpression;
    }

    export interface Strcasecmp {
      /**
       * Performs case-insensitive string comparison and returns: 0 if two strings are equivalent, 1 if the first string is greater than the                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          