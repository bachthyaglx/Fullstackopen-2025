 { a: { c: 48 } }, { d: 'yep' }],
              _doc: { yep: [15], arr: [{ a: { b: 20 }, e: 'a' }, { a: { c: 48, b: 20 }, e: 'b' }, { d: 'yep', e: 35 }] } },
            { yep: true, _doc: { special: true, yep: 0 } }
          ], o.arr);

          mpath.set('arr.0.arr.a.b', 36, o, special);
          assert.deepEqual([
            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],
              _doc: { yep: [15], arr: [{ a: { b: 36 }, e: 'a' }, { a: { c: 48, b: 36 }, e: 'b' }, { d: 'yep', e: 35 }] } },
            { yep: true, _doc: { special: true, yep: 0 } }
          ], o.arr);

          done();
        });
        it('with array', function(done) {
          mpath.set('arr.0.arr.a.b', [1, 2, 3, 4], o, special, function(v) {
            return v * 2;
          });
          assert.deepEqual([
            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],
              _doc: { yep: [15], arr: [{ a: { b: 2 }, e: 'a' }, { a: { c: 48, b: 4 }, e: 'b' }, { d: 'yep', e: 35 }] } },
            { yep: true, _doc: { special: true, yep: 0 } }
          ], o.arr);

          mpath.set('arr.0.arr.a.b', [1, 2, 3, 4], o, special);
          assert.deepEqual([
            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],
              _doc: { yep: [15], arr: [{ a: { b: 1 }, e: 'a' }, { a: { c: 48, b: 2 }, e: 'b' }, { d: 'yep', e: 35 }] } },
            { yep: true, _doc: { special: true, yep: 0 } }
          ], o.arr);

          done();
        });
      });

      describe('array.index.array.$.path.path', function() {
        it('with single value', function(done) {
          mpath.set('arr.0.arr.$.a.b', '$', o, special, function(v) {
            return 'dollaz';
          });
          assert.deepEqual([
            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],
              _doc: { yep: [15], arr: [{ a: { b: 'dollaz' }, e: 'a' }, { a: { c: 48, b: 'dollaz' }, e: 'b' }, { d: 'yep', e: 35 }] } },
            { yep: true, _doc: { special: true, yep: 0 } }
          ], o.arr);

          mpath.set('arr.0.arr.$.a.b', '$', o, special);
          assert.deepEqual([
            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],
              _doc: { yep: [15], arr: [{ a: { b: '$' }, e: 'a' }, { a: { c: 48, b: '$' }, e: 'b' }, { d: 'yep', e: 35 }] } },
            { yep: true, _doc: { special: true, yep: 0 } }
          ], o.arr);

          done();
        });
        it('with array', function(done) {
          mpath.set('arr.0.arr.$.a.b', [1], o, special, function(v) {
            return {};
          });
          assert.deepEqual([
            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],
              _doc: { yep: [15], arr: [{ a: { b: {} }, e: 'a' }, { a: { c: 48, b: {} }, e: 'b' }, { d: 'yep', e: 35 }] } },
            { yep: true, _doc: { special: true, yep: 0 } }
          ], o.arr);

          mpath.set('arr.0.arr.$.a.b', [1], o, special);
          assert.deepEqual([
            { yep: 47, arr: [{ a: { b: 47 } }, { a: { c: 48 } }, { d: 'yep' }],
              _doc: { yep: [15], arr: [{ a: { b: [1] }, e: 'a' }, { a: { c: 48, b: [1] }, e: 'b' }, { d: 'yep', e: 35 }] } },
            { yep: true, _doc: { special: true, yep: 0 } }
          ], o.arr);

          done();
        });
      });

      describe('array.array.index.path', function() {
        it('with single value', function(done) {
          mpath.set('arr.arr.0.a', 'single', o, special, function(v) {
 